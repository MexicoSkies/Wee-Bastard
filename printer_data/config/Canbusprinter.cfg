[include mainsail.cfg]
#############################################################
#                   VORON 2.4 r2
#############################################################

[mcu]
canbus_uuid: eb297e77cdc1
#serial:/dev/serial/by-id/usb-Klipper_stm32f446xx_1F004D000251323438323636-if00
#####################################################################
## 	                MCU EBBCan
#####################################################################

[mcu EBBCan]
canbus_uuid: fa93ea72c278
#  The following command is used to view the ID of canbus and needs to be entered in the ssh terminal.
# “ ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0 ”

#[fcm]
#topic: <Wee_Bastard_Alert> This is for text alerts when filament change is needed

adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345

#####################################################################
##	                 Temperature Monitoring
#####################################################################
[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28
[temperature_sensor BTT-MCU]        
sensor_type: temperature_mcu
[temperature_sensor BTT-PI]
sensor_type: temperature_host

#####################################################################
##	                cartographer (制图师)
#####################################################################

[cartographer]
canbus_uuid:fad33e46adc8 #UNCOMMENT

speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of cartographer from the nozzle.
y_offset: 21.1
#   Y offset of cartographer from the nozzle.
trigger_distance: 2.
#   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default cartographer model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.

#[lis2dw]
#cs_pin: cartographer:PA3
#spi_bus: spi1

#[resonance_tester]
#accel_chip: lis2dw
#probe_points:
#    150, 150, 20


[include fluidd.cfg]

#[include runout.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes 

[include timelapse.cfg]

[include KAMP_Settings.cfg]

[exclude_object]

[include stealthburner_leds.cfg]

[printer]                           
kinematics: corexy                  
max_velocity: 300                   
max_accel: 5000			            
max_z_velocity: 15		     	    
max_z_accel: 300                    
square_corner_velocity: 5.0

####################################################################################
#                [X/Y Stepper Settings]
####################################################################################
#  B/X ---------- A/Y
#   |              |
#   |------E-------|
#   |              |
#   |              |
#   |              |

[stepper_x]
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200
endstop_pin: ^PB14
position_min: 0                     
position_endstop: 300               
position_max: 300                   
homing_speed: 50                   
homing_retract_dist: 5              
homing_positive_dir: true 

[tmc2209 stepper_x]                 
uart_pin: PE7                       
interpolate: False  #True                   
run_current: 1.2    #1.0                    
hold_current: 0.8   #0.5                   
sense_resistor: 0.110               
stealthchop_threshold: 0

[stepper_y]
step_pin: PD8                       
dir_pin: !PB12                      
enable_pin: !PD9                    
rotation_distance: 40               
microsteps: 16                      
full_steps_per_rotation:200         
endstop_pin: ^PB13                  
position_min: 0                     
position_endstop: 300               
position_max: 300                   
homing_speed: 50                   
homing_retract_dist: 5              
homing_positive_dir: true         

[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False  #True                  
run_current: 1.2    #1.0                     
hold_current: 0.5                   
sense_resistor: 0.110              
stealthchop_threshold: 0

####################################################################################
#                         Z Stepper Settings
####################################################################################
#   z1 ----------- z2
#   |              |
#   |              |
#   |              |
#   |              |
#  z0------------- z3

[stepper_z] 
step_pin: PD14                     
dir_pin: !PD13                      
enable_pin: !PD15                   
rotation_distance: 40               
gear_ratio: 80:16                  
microsteps: 16                     
endstop_pin: probe:z_virtual_endstop    
position_max: 280                    
position_min: -10                    
homing_speed: 8                     
second_homing_speed: 3               
homing_retract_dist: 3              

[tmc2209 stepper_z]                  
uart_pin: PD10                       
uart_address: 0
interpolate: False  #True                    
run_current: 1.0    #0.7                     
#hold_current: 0.8   #0.4                   
stealthchop_threshold: 0         


[stepper_z1]                        
step_pin: PE6                       
dir_pin: PC13                       
enable_pin: !PE5                    
rotation_distance: 40              
gear_ratio: 80:16                   
microsteps: 16                     

[tmc2209 stepper_z1]                
uart_pin: PC14                      
interpolate: False  #True                  
run_current: 1.0    #0.7                   
#hold_current: 0.8   #0.4                  
sense_resistor: 0.110               
stealthchop_threshold: 0         


[stepper_z2]                        
step_pin: PE2                       
dir_pin: !PE4                       
enable_pin: !PE3                    
rotation_distance: 40               
gear_ratio: 80:16                  
microsteps: 16                      

[tmc2209 stepper_z2]                
uart_pin: PC15                      
interpolate: False  #True                  
run_current: 1.0    #0.7                    
#hold_current: 0.8   #0.4            
sense_resistor: 0.110              
stealthchop_threshold: 0         


[stepper_z3]                       
step_pin: PE1  #PD12                     
dir_pin: PE0  #PC4                       
enable_pin: !PC5  #!PE8                   
rotation_distance: 40               
gear_ratio: 80:16                  
microsteps: 16                     

[tmc2209 stepper_z3]               
uart_pin: PD11  #PA15
interpolate: False  #True                  
run_current: 1.0    #0.7                   
#hold_current: 0.8   #0.4              
sense_resistor: 0.110              
stealthchop_threshold: 0  

####################################################################################
#                           Extruder
####################################################################################

[extruder]                          
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
full_steps_per_rotation: 200  # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
microsteps: 16
gear_ratio: 9:1   #50:10
rotation_distance: 47.371          #21.525
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: EPCOS 100K B57560G104F    
sensor_pin: EBBCan:gpio27
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 100                 # Minimum extrusion temperature
pressure_advance: 0.05                # Propulsion pressure - try to keep pressure below 1.0
pressure_advance_smooth_time: 0.040   # Smooth advance time - default value is 0.040
##Nozzle Temperature PID Calibration Command:  "PID_CALIBRATE HEATER=extruder TARGET=245"
max_extrude_only_distance: 101.0


[tmc2209 extruder] 
uart_pin: PD7                       
interpolate: False                  
run_current: 0.55  #OLD 0.5                    
#hold_current: 0.2  NO Longer Recommended                 
sense_resistor: 0.110               
stealthchop_threshold: 0         

####################################################################################
#                            Bed Heater
####################################################################################

[heater_bed]
heater_pin: PB4                    
sensor_type: Generic 3950           
sensor_pin: PB0                     
max_power: 1.00                     
min_temp: -70                       
max_temp: 125                       
#control: pid                        
#pid_kp: 58.437                      
#pid_ki: 2.347                      
#pid_kd: 363.769                     

####################################################################################
#                             Probe
####################################################################################

[probe]
pin: PA3                          
x_offset: 0                         
y_offset: 0                     
#z_offset: 0               #Comment out for Tap                      
speed: 10.0                        
samples: 3                         
samples_result: median             
sample_retract_dist: 3.0            
samples_tolerance: 0.006            
samples_tolerance_retries: 3        

## This is for Tap Probe only
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('For Fucks Sake, the extruder temperature target of %.1fC is still too damn high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too damn high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

####################################################################################
#	                       Fan Control
####################################################################################

[heater_fan hotend_fan] 
pin: PA13                           
max_power: 1.0                      
kick_start_time: 0.5                
heater: extruder                    
heater_temp: 50.0                   
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0                      

[fan]                               
pin: PA14                           
max_power: 1.0    #Old value 0.4                     
kick_start_time: 0.5               
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10                     

[heater_fan controller_fan]        
pin: PC8                            
kick_start_time: 0.5                
heater: heater_bed                  
heater_temp: 60
fan_speed: .5
                

[heater_fan exhaust_fan]            
pin: PB2                            
max_power: 1.0                      
shutdown_speed: 0.0                 
kick_start_time: 5.0               
heater: heater_bed                  
heater_temp: 60                     
fan_speed: .5 

####################################################################################
#	                         LED
####################################################################################

#[neopixel Stealthburner]             
#pin:PD3                             
#chain_count:3                      
#color_order: GRBW                  
#initial_RED: 0                    
#initial_GREEN: 0                  
#initial_BLUE: 0                  
#initial_WHITE: 1

#[neopixel chamber_lights]
#pin:PA2
#chain_count: 20      #56 Front & 2 Sides
#color_order:GRBW
#initial_RED: 0                    
#initial_GREEN: 0                  
#initial_BLUE: 0
#initial_WHITE: 1

####################################################################################
#                       Turn Off Bed When Idle
####################################################################################

[idle_timeout]
timeout: 1800                       

[safe_z_home]                       
home_xy_position:150,150            
speed:200                           
z_hop:10                            
z_hop_speed: 10                     

###################################################################################
#                          Bed Level Stuff
###################################################################################  
[quad_gantry_level]

gantry_corners:                    
	-60,-10
	360,370
points:
	50,50
	50,250
	250,250
	250,50

speed: 200                          
horizontal_move_z: 10               
retries: 5                          
retry_tolerance: 0.01               
max_adjust: 10                      


[bed_mesh]
speed: 200                          
horizontal_move_z: 8                
mesh_min: 30, 30                    
mesh_max: 270,270                   
fade_start: 0.6                     
fade_end: 10.0                      
fade_target: 0                      
probe_count: 5,5                    
algorithm: bicubic                  


####################################################################################
#                          RPi & MCU Temperatures
####################################################################################

[temperature_sensor mcu]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 100

[temperature_sensor Pi]
sensor_type: temperature_host
sensor_path:/sys/class/thermal/thermal_zone0/temp
min_temp: 0
max_temp: 100

####################################################################################
# 	                        Chamber Temperature
####################################################################################

#[temperature_sensor Box]              
#sensor_type: ATC Semitec 104GT-2      
#sensor_pin: PC1                     
#min_temp: 10
#max_temp: 100

####################################################################################
#                            mini12864
####################################################################################

[display]
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

####################################################################################
#                               Neopixel
####################################################################################

[neopixel fysetc_mini12864]
pin: PC12                           
chain_count: 3                      
initial_RED: 0.1                    
initial_GREEN: 0.5                  
initial_BLUE: 0.0                   
color_order: RGB                    

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

[output_pin beeper]
pin: PC9   #EXP1_1
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)


####################################################################################
# 	              Input Shaper & Resonance Tester
####################################################################################

[mcu rpi]
serial: /tmp/klipper_host_mcu

[input_shaper]
shaper_type_x = 3hump_ei
shaper_freq_x = 76.2
shaper_type_y = ei
shaper_freq_y = 76

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20 


####################################################################################
#	                               Macros
####################################################################################


[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(10)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(500)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(1000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.9 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 } #Old VALUE=0.8
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}



[pause_resume]

#[gcode_macro M600]
#gcode:
#    PAUSE

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G91
    G1 Z+5 F600
    G90
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000 
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro QGL]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F3600


#####################################################################
#                       Print_Start_Macro
#####################################################################

[gcode_macro PRINT_START]
## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 2min"                # Displays info
    G4 P120000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  #Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  #G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="The Wee Bastard is Printing"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line G1 X100 E20 F1000
  G90                                              # Absolut position

 
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F10000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z25 F3000                    ; move nozzle up 25mm
    G90                            ; absolute positioning
    G28 x y  #G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    M117  Finshed

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


[gcode_macro HEAT_SOAK]
#description: heats the bed for a while

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET | default(0) | float %}
    {% set DURATION = (params.DURATION | default(5) | int) * 60 %} ## minutes to seconds

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }

    ;; run the fan to circulate air
    ;_SET_FAN_SPEED PERCENT=50

    ;; put the bed and nozzle where they're a safe distance apart
    G28
    ;CENTER

    M84 ;; turn off steppers

    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
#description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }

        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}

        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan

            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    {% else %}

        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}

        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }

        ## dwell for 1ms to prevent from going idle
        G4 P1

    {% endif %}


    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 44.562
#*# pid_ki = 1.415
#*# pid_kd = 350.925
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 14.207
#*# pid_ki = 0.571
#*# pid_kd = 88.440
#*#
#*# [probe]
#*# z_offset = -0.540
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.042500, 0.042500, 0.055000
#*# 	0.020000, 0.025000, 0.027500
#*# 	0.005000, -0.005000, 0.025000
#*# 	0.055000, 0.022500, 0.037500
#*# 	0.055000, 0.045000, 0.037500
#*# x_count = 3
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 135.0
#*# max_x = 165.0
#*# min_y = 50.0
#*# max_y = 250.0
